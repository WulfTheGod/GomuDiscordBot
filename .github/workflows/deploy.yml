name: Deploy to Lightsail

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Generate .env file
      - name: Generate .env file
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> .env
          echo "GENIUS_ACCESS_TOKEN=${{ secrets.GENIUS_ACCESS_TOKEN }}" >> .env

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t gomu-discord-bot .

      # Save Docker image as a tarball
      - name: Save Docker image
        run: docker save gomu-discord-bot > gomu-discord-bot.tar

      # Copy Docker image and .env to Lightsail
      - name: Copy files to Lightsail
        env:
          LIGHTSAIL_IP: ${{ secrets.LIGHTSAIL_IP }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem gomu-discord-bot.tar .env ubuntu@$LIGHTSAIL_IP:/home/ubuntu/

      # SSH into Lightsail and deploy
      - name: Deploy Docker container
        env:
          LIGHTSAIL_IP: ${{ secrets.LIGHTSAIL_IP }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$LIGHTSAIL_IP << EOF
          docker stop gomu-discord-bot || true
          docker rm gomu-discord-bot || true
          docker load < /home/ubuntu/gomu-discord-bot.tar
          docker run -d --restart=always --name gomu-discord-bot -p 80:80 --env-file /home/ubuntu/.env gomu-discord-bot
          EOF
